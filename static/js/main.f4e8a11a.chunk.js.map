{"version":3,"sources":["components/Event.js","components/EventList.js","mock_events/mock-events.js","api.js","components/Alert.js","components/CitySearch.js","components/NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","expanded","handleShowDetails","setState","event","this","props","data","name","value","yes_rsvp_count","rsvp_limit","colors","className","local_time","local_date","height","width","dataKey","nameKey","cx","cy","outerRadius","label","map","entry","index","key","fill","iconSize","iconType","layout","verticalAlign","align","venue","address_1","city","localized_country_name","dangerouslySetInnerHTML","__html","description","visibility","href","link","onClick","Component","EventList","events","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","lat","lon","repinned","country","is_online_event","group","join_mode","urlname","who","localized_location","region","timezone","member_pay_fee","how_to_find_us","getOrRenewAccessToken","type","a","url","axios","get","tokenInfo","localStorage","setItem","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","searchParams","URLSearchParams","window","location","search","code","lastSavedTime","refreshToken","getSuggestions","query","startsWith","name_string","zip","token","result","getEvents","page","navigator","onLine","JSON","parse","length","stringify","Alert","getStyle","color","background","style","text","InfoAlert","ErrorAlert","fontStyle","WarningAlert","OfflineAlert","CitySearch","suggestions","infoText","offlineText","handleInputChanged","target","showSuggestion","then","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","number","onNumberChange","errorText","App","offLineAlert","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","noEvent","addEventListener","margin","top","right","bottom","left","stroke","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.f4e8a11a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ResponsiveContainer, PieChart, Pie, Cell, Legend, Tooltip, } from 'recharts';\n\n\nclass Event extends Component {\n\n  state = {\n    expanded: false,\n  }\n\n  handleShowDetails = () => {\n    if (this.state.expanded === false) {\n      this.setState({ expanded: true });\n    } else {\n      this.setState({ expanded: false });\n    }\n  }\n\n  render() {\n\n    const event = this.props.event;\n    const data = [{ name: \"Attending\", value: event.yes_rsvp_count }, { name: \"Vacancy\", value: (event.rsvp_limit - event.yes_rsvp_count) }];\n    const colors = [\"#1978a5\", \"#FF0000\"]\n\n    return (\n      <div className=\"Event\">\n        <p className=\"time\">{event.local_time} - {event.local_date}</p>\n        <p className=\"name\">{event.name}</p>\n        <p className=\"going\">{event.yes_rsvp_count} people are attending</p>\n        <ResponsiveContainer height={150} width={250}>\n          <PieChart>\n            <Pie data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={32} label >\n              {\n                data.map((entry, index) => (<Cell key={`cell-${index}`} fill={colors[index]} />))\n              }\n            </Pie>\n            <Legend iconSize={10} iconType=\"triangle\" layout=\"horizontal\" verticalAlign=\"bottom\" align=\"center\" />\n            <Tooltip />\n          </PieChart>\n        </ResponsiveContainer>\n        {this.state.expanded &&\n          <div className=\"extra\">\n            {event.venue && event.venue.name &&\n              <p className='address'>\n                {event.venue.name\n                  + ', ' + event.venue.address_1\n                  + ', ' + event.venue.city\n                  + ', ' + event.venue.localized_country_name\n                }\n              </p>\n            }\n            <div className=\"description\" dangerouslySetInnerHTML={{ __html: event.description }} />\n            <p className=\"visibility\">{event.visibility}</p>\n            <a className=\"link\" href={event.link}>Event Link</a>\n          </div>\n        }\n        <button className=\"details-btn\" onClick={this.handleShowDetails}>Details</button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockEvents = {\n\n  city: {\n    id: 1007700,\n    city: 'München',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257\n  },\n  events: [\n    {\n      created: 1591614589000,\n      duration: 7200000,\n      id: '271164041',\n      name: 'Saturday morning squash in Parkclub Nymphenburg',\n      rsvp_limit: 3,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1592036100000,\n      local_date: '2020-06-27',\n      local_time: '10:15',\n      updated: 1591614589000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      venue: {\n        id: 25978898,\n        name: 'Park Club Nymphenburg',\n        lat: 48.1603889465332,\n        lon: 11.513166427612305,\n        repinned: false,\n        address_1: 'Stievestraße 15, 80638',\n        city: 'München',\n        country: 'DE',\n        localized_country_name: 'Germany'\n      },\n      is_online_event: false,\n      group: {\n        created: 1539632284000,\n        name: 'Casual Squash Games',\n        id: 30324426,\n        join_mode: 'approval',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Casual-Squash-Games',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Casual-Squash-Games/events/271160041/',\n      description: '<p>All levels are welcome!</p> <p>We meet at the entrance of Parkclub Nymphenburg at 10:00.<br/>There is 1 court (2-3 people) booked from 10:15 till 11:45<br/>If there are no slots left, use waitlist, we can try to book another court</p> <p>Important: Cancellation is free for 48 hours in advance. So if you RSVP and cannot come, please let me know, so I can cancel the court.<br/>Cancellations on short notice should be paid, to cover court costs.</p> ',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1562750055000,\n      duration: 10800000,\n      id: 'tkqsdrybckblb',\n      name: 'Designer-Stammtisch',\n      rsvp_limit: 35,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1594227600000,\n      local_date: '2020-07-08',\n      local_time: '19:00',\n      updated: 1562750055000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 1,\n      venue: {\n        id: 26506448,\n        name: 'Cafe Zeitgeist',\n        lat: 48.15114212036133,\n        lon: 11.576687812805176,\n        repinned: false,\n        address_1: 'Türkenstraße 74',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany'\n      },\n      is_online_event: false,\n      group: {\n        created: 1444668795000,\n        name: 'Münchner Designer-Stammtisch',\n        id: 19024346,\n        join_mode: 'approval',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Designer-Stammtisch',\n        who: 'Designer',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Designer-Stammtisch/events/tkqsdrybckblb/',\n      description: '<p>Liebe DesignerInnen,</p> <p>wir treffen uns jeden 2. Mittwoch im Monat um 19:00 Uhr in (neu:) Zeitgeist in der Türkenstraße.</p> <p>Bringt eure Erfolge, neusten Projekte oder auch kleinen Problemchen mit und teilt sie mit anderen Designern bei einem entspannten Abendessen.</p> <p>Wir freuen uns auf neue Designer und alte Bekannte, und auf einen gemütlichen Abend mit Designer-Kaltsch-und-Tratsch.</p> <p>Lieben Gruß, Ben</p> <p>ps: für alle die gerne länger unterwegs sind finden wir auch diesmal bestimmt wieder eine Location.</p> <p>pps: We mostly chat in German, but English will work just find as well.</p> ',\n      how_to_find_us: 'Fragt nach dem Designerstammtisch dort! *** Please ask for the Designerstammtisch there!',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1531614589000,\n      duration: 7200000,\n      id: '271160343',\n      name: 'Flarper',\n      rsvp_limit: 3,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1592036100000,\n      local_date: '2020-06-28',\n      local_time: '10:15',\n      updated: 1591614589000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      venue: {\n        id: 25978838,\n        name: 'Park Club Nymphenburg',\n        lat: 48.1603889465332,\n        lon: 11.513166427612305,\n        repinned: false,\n        address_1: 'Stievestraße 15, 80638',\n        city: 'München',\n        country: 'DE',\n        localized_country_name: 'Germany'\n      },\n      is_online_event: false,\n      group: {\n        created: 1539632284000,\n        name: 'Casual Squash Games',\n        id: 30323826,\n        join_mode: 'approval',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Casual-Squash-Games',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Casual-Squash-Games/events/271160041/',\n      description: '<p>All levels are welcome!</p> <p>We meet at the entrance of Parkclub Nymphenburg at 10:00.<br/>There is 1 court (2-3 people) booked from 10:15 till 11:45<br/>If there are no slots left, use waitlist, we can try to book another court</p> <p>Important: Cancellation is free for 48 hours in advance. So if you RSVP and cannot come, please let me know, so I can cancel the court.<br/>Cancellations on short notice should be paid, to cover court costs.</p> ',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1591614589000,\n      duration: 7200000,\n      id: '271163041',\n      name: 'Farts in the park',\n      rsvp_limit: 3,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1592036100000,\n      local_date: '2020-06-29',\n      local_time: '10:15',\n      updated: 1591614589000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      venue: {\n        id: 25938898,\n        name: 'Park Club Nymphenburg',\n        lat: 48.1603889465332,\n        lon: 11.513166427612305,\n        repinned: false,\n        address_1: 'Stievestraße 15, 80638',\n        city: 'München',\n        country: 'DE',\n        localized_country_name: 'Germany'\n      },\n      is_online_event: false,\n      group: {\n        created: 1539632284000,\n        name: 'Casual Squash Games',\n        id: 30334826,\n        join_mode: 'approval',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Casual-Squash-Games',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Casual-Squash-Games/events/271160041/',\n      description: '<p>All levels are welcome!</p> <p>We meet at the entrance of Parkclub Nymphenburg at 10:00.<br/>There is 1 court (2-3 people) booked from 10:15 till 11:45<br/>If there are no slots left, use waitlist, we can try to book another court</p> <p>Important: Cancellation is free for 48 hours in advance. So if you RSVP and cannot come, please let me know, so I can cancel the court.<br/>Cancellations on short notice should be paid, to cover court costs.</p> ',\n      visibility: 'public',\n      member_pay_fee: false\n    }\n  ]\n};\n\nexport { mockEvents };\n","import { mockEvents } from './mock_events/mock-events';\nimport axios from 'axios';\n\n// API Auth Token Functions\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url = 'https://b8irz6xb5a.execute-api.us-east-2.amazonaws.com/dev/api/token/' + key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to renew token by refresh_token\n    url = 'https://b8irz6xb5a.execute-api.us-east-2.amazonaws.com/dev/api/refresh/' + key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nasync function getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  // If no access_token is found\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    // If no code is found the user needs to be redirected to get it\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize'\n        + '?client_id=10l1jtlp01s1lj83me59sso5kh'\n        + '&response_type=code'\n        + '&redirect_uri=https://cruebee.github.io/meetemup/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  // Check if access_token is still valid\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n  // Date.now() returns a timestamp in milleseconds, one hour = 3,600,000\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken;\n  }\n\n  // If access_token is expired, renew it using refresh_token\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n\n}\n\n// API Event Functions\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n      + query\n      + '&access_token=' + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    return JSON.parse(events);\n  }\n\n  // Check for an access_token\n  const token = await getAccessToken();\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    // lat and lon is optional; if you have them you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    // page is also optional, if page is available, add it\n    if (page) {\n      url += '&page=' + page;\n    }\n    const result = await axios.get(url);\n    const events = result.data.events;\n    if (events.length) { // Check if events exist\n      localStorage.setItem('lastEvents', JSON.stringify(events));\n    }\n    return events;\n  }\n  return [];\n}\n\nexport { getSuggestions, getEvents };\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      background: 'white',\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n      background: 'white',\n    };\n  }\n}\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props)\n    this.color = 'yellow';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n  }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert, OfflineAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from '../api';\nimport { InfoAlert, OfflineAlert } from './Alert';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    infoText: '',\n    offlineText: ''\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({\n      query: value\n    });\n\n    if (event.target.value === '') {\n      this.setState({\n        showSuggestion: false\n      });\n    } else {\n      getSuggestions(value).then(suggestions => {\n        this.setState({\n          showSuggestion: true,\n          suggestions: suggestions,\n        });\n\n        if (value.length >= 3 && suggestions.length === 0) {\n          this.setState({\n            infoText: 'We can\\'t locate the city you are searching for. Please try another city.',\n          });\n        } else {\n          this.setState({\n            infoText: ''\n          });\n        }\n      });\n    }\n\n    if (!navigator.onLine) {\n      this.setState({\n        offlineText: 'Please reconnect to the internet to search for new events and cities.'\n      });\n    } else {\n      this.setState({\n        offlineText: ''\n      });\n    }\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <div className=\"alert-container\">\n          <InfoAlert className=\"info-alert\" text={this.state.infoText} />\n          <OfflineAlert className=\"info-alert\" text={this.state.offlineText} />\n        </div>\n        <label className=\"search-label\">City Search</label>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          placeholder=\"Change City\"\n        >\n        </input>\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item =>\n            <li\n              key={item.name_string}\n              onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}\n            >{item.name_string}\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    number: 32,\n  }\n\n  onNumberChange = (event) => {\n    const value = event.target.value;\n    this.setState({ number: value });\n    this.props.updateEvents(null, null, value);\n\n    if (value < 1) {\n      this.setState({ errorText: 'Number must be at least 1' });\n    } else {\n      this.setState({ errorText: '' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <div className=\"alert-container\">\n          <ErrorAlert text={this.state.errorText} />\n        </div>\n        <label className=\"number-label\">Show </label>\n        <input\n          type=\"number\"\n          className=\"number-of-events\"\n          value={this.state.number}\n          onChange={this.onNumberChange}\n        />\n        <label className=\"number-label\"> Events</label>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { getEvents } from './api';\nimport { OfflineAlert, WarningAlert } from './components/Alert';\nimport moment from 'moment';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    lat: null,\n    lon: null,\n    page: null,\n    infoText: '',\n    offlineText: ''\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n    this.noEvent();\n    window.addEventListener('online', this.offLineAlert());\n  }\n\n  offLineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        offlineText: 'You appear to be offline, this list is cached. Please connect to the internet for an updated list.'\n      });\n    } else {\n      this.setState({\n        offlineText: '',\n      });\n    }\n  }\n\n  countEventsOnADate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = []; // Create empty array for next 7 days\n    const currentDate = moment(); // Today \n    // Loop 7 times for next 7 days\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days'); // Add 1 day to current date, currentDate changes\n      const dateString = currentDate.format('YYYY-MM-DD'); // Format the date\n      // Use the countEventsOnADate function to count #events on this date\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\n    }\n    return next7Days;\n  }\n\n\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events =>\n        this.setState({ events, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\n        this.setState({ events, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\n        this.setState({ events })\n      );\n    }\n  }\n  noEvent = () => {\n    if (this.state.events.length === 0) {\n      this.setState({\n        infoText: 'This city isn\\'t hosting any events right now, try another city.'\n      });\n    } else {\n      this.setState({\n        infoText: ''\n      })\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"alert-container\">\n          <OfflineAlert text={this.state.offlineText} />\n        </div>\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <label className=\"chart-label\">Events This Week</label>\n        <ResponsiveContainer className=\"chart-container\" height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid fill=\"#FFFFFF\" />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"Date\" stroke=\"#FFFFFF\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"Number of Upcoming Events\" stroke=\"#FFFFFF\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#1978a5\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <EventList events={this.state.events} />\n        {this.state.noEvent && <WarningAlert text={this.state.infoText} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\natatus.config('6f6ab4a42f514451b87fb7e484458d20').install();\n"],"sourceRoot":""}