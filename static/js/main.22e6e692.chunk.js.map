{"version":3,"sources":["components/Event.js","components/EventList.js","mock_events/mock-events.js","api.js","components/Alert.js","components/CitySearch.js","components/NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","expanded","handleShowDetails","setState","prevState","event","this","props","className","local_time","local_date","name","yes_rsvp_count","venue","address_1","city","localized_country_name","dangerouslySetInnerHTML","__html","description","visibility","href","link","onClick","Component","EventList","events","map","key","id","mockEvents","created","duration","rsvp_limit","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","lat","lon","repinned","country","is_online_event","group","join_mode","urlname","who","localized_location","region","timezone","member_pay_fee","how_to_find_us","getOrRenewAccessToken","type","a","url","axios","get","tokenInfo","localStorage","setItem","data","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","searchParams","URLSearchParams","window","location","search","code","lastSavedTime","refreshToken","getSuggestions","query","startsWith","name_string","zip","token","result","getEvents","page","Alert","getStyle","color","background","style","text","InfoAlert","ErrorAlert","fontStyle","CitySearch","suggestions","handleInputChanged","value","target","then","length","infoText","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","number","onNumberChange","errorText","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","atatus","install"],"mappings":"mQA4CeA,G,kNAxCbC,MAAQ,CACNC,UAAU,G,EAGZC,kBAAoB,WAClB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BH,UAAWG,EAAUH,c,uDAKvB,IAAMI,EAAQC,KAAKC,MAAMF,MAEzB,OACE,yBAAKG,UAAU,SACb,uBAAGA,UAAU,QAAQH,EAAMI,WAA3B,MAA0CJ,EAAMK,YAChD,uBAAGF,UAAU,QAAQH,EAAMM,MAC3B,uBAAGH,UAAU,SAASH,EAAMO,eAA5B,yBACCN,KAAKN,MAAMC,UACV,yBAAKO,UAAU,SACZH,EAAMQ,OAASR,EAAMQ,MAAMF,MAC1B,uBAAGH,UAAU,WACVH,EAAMQ,MAAMF,KACT,KAAON,EAAMQ,MAAMC,UACnB,KAAOT,EAAMQ,MAAME,KACnB,KAAOV,EAAMQ,MAAMG,wBAI3B,yBAAKR,UAAU,cAAcS,wBAAyB,CAAEC,OAAQb,EAAMc,eACtE,uBAAGX,UAAU,cAAcH,EAAMe,YACjC,uBAAGZ,UAAU,OAAOa,KAAMhB,EAAMiB,MAAhC,eAGJ,4BAAQd,UAAU,cAAce,QAASjB,KAAKJ,mBAA9C,gB,GApCYsB,cCgBLC,E,uKAZX,OACE,wBAAIjB,UAAU,aACXF,KAAKC,MAAMmB,OAAOC,KAAI,SAAAtB,GAAK,OAC1B,wBAAIuB,IAAKvB,EAAMwB,IACb,kBAAC,EAAD,CAAOxB,MAAOA,a,GAPFmB,a,uBCHlBM,EAYI,CACN,CACEC,QAAS,aACTC,SAAU,KACVH,GAAI,YACJlB,KAAM,kDACNsB,WAAY,EACZC,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACN1B,WAAY,aACZD,WAAY,QACZ4B,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChB3B,eAAgB,EAChBC,MAAO,CACLgB,GAAI,SACJlB,KAAM,wBACN6B,IAAK,iBACLC,IAAK,mBACLC,UAAU,EACV5B,UAAW,4BACXC,KAAM,aACN4B,QAAS,KACT3B,uBAAwB,WAE1B4B,iBAAiB,EACjBC,MAAO,CACLd,QAAS,aACTpB,KAAM,sBACNkB,GAAI,SACJiB,UAAW,WACXN,IAAK,kBACLC,IAAK,mBACLM,QAAS,sBACTC,IAAK,UACLC,mBAAoB,sBACpBjD,MAAO,GACP2C,QAAS,KACTO,OAAQ,QACRC,SAAU,iBAEZ7B,KAAM,+DACNH,YAAa,wcACbC,WAAY,SACZgC,gBAAgB,GAElB,CACErB,QAAS,aACTC,SAAU,MACVH,GAAI,gBACJlB,KAAM,sBACNsB,WAAY,GACZC,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACN1B,WAAY,aACZD,WAAY,QACZ4B,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChB3B,eAAgB,EAChBC,MAAO,CACLgB,GAAI,SACJlB,KAAM,iBACN6B,IAAK,kBACLC,IAAK,mBACLC,UAAU,EACV5B,UAAW,wBACXC,KAAM,aACN4B,QAAS,KACT3B,uBAAwB,WAE1B4B,iBAAiB,EACjBC,MAAO,CACLd,QAAS,aACTpB,KAAM,kCACNkB,GAAI,SACJiB,UAAW,WACXN,IAAK,kBACLC,IAAK,mBACLM,QAAS,sBACTC,IAAK,WACLC,mBAAoB,sBACpBjD,MAAO,GACP2C,QAAS,KACTO,OAAQ,QACRC,SAAU,iBAEZ7B,KAAM,mEACNH,YAAa,6nBACbkC,eAAgB,2FAChBjC,WAAY,SACZgC,gBAAgB,I,yBCtGPE,E,gFAAf,WAAqCC,EAAM3B,GAA3C,iBAAA4B,EAAA,4DAEe,QAATD,EAEFE,EAAM,wEAA0E7B,EAC9D,UAAT2B,IAETE,EAAM,0EAA4E7B,GAPtF,SAW0B8B,IAAMC,IAAIF,GAXpC,cAWQG,EAXR,OAcEC,aAAaC,QAAQ,eAAgBF,EAAUG,KAAKC,cACpDH,aAAaC,QAAQ,gBAAiBF,EAAUG,KAAKE,eACrDJ,aAAaC,QAAQ,kBAAmBI,KAAKC,OAhB/C,kBAmBSP,EAAUG,KAAKC,cAnBxB,4C,+BAsBeI,I,2EAAf,oCAAAZ,EAAA,yDACQa,EAAcR,aAAaS,QAAQ,gBAD3C,mBAKUC,EAAe,IAAIC,gBAAgBC,OAAOC,SAASC,QACnDC,EAAOL,EAAaZ,IAAI,QANlC,uBASMc,OAAOC,SAASrD,KAAO,sJAT7B,kBAaa,MAbb,gCAeWiC,EAAsB,MAAOsB,IAfxC,UAmBQC,EAAgBhB,aAAaS,QAAQ,qBAEvCD,GAAgBH,KAAKC,MAAQU,EAAgB,MArBnD,0CAsBWR,GAtBX,eA0BQS,EAAejB,aAAaS,QAAQ,iBA1B5C,kBA2BShB,EAAsB,QAASwB,IA3BxC,6C,+BAgCeC,E,8EAAf,WAA8BC,GAA9B,mBAAAxB,EAAA,0DACMiB,OAAOC,SAASrD,KAAK4D,WAAW,oBADtC,yCAEW,CACL,CACElE,KAAM,SACN4B,QAAS,KACT3B,uBAAwB,UACxBkE,YAAa,kBACbC,IAAK,UACL3C,IAAK,MACLC,IAAK,OAEP,CACE1B,KAAM,SACN4B,QAAS,KACT3B,uBAAwB,MACxBhB,MAAO,KACPkF,YAAa,4BACbC,IAAK,QACL3C,IAAK,MACLC,KAAM,SApBd,uBAyBsB2B,IAzBtB,YAyBQgB,EAzBR,gCA2BU3B,EAAM,4EACRuB,EACA,iBAAmBI,EA7B3B,SA8ByB1B,IAAMC,IAAIF,GA9BnC,cA8BU4B,EA9BV,yBA+BWA,EAAOtB,MA/BlB,iCAiCS,IAjCT,6C,+BAoCeuB,E,kFAAf,WAAyB9C,EAAKC,EAAK8C,GAAnC,mBAAA/B,EAAA,0DACMiB,OAAOC,SAASrD,KAAK4D,WAAW,oBADtC,yCAEWnD,GAFX,uBAMsBsC,IANtB,YAMQgB,EANR,gCAQQ3B,EAAM,yFACa2B,EAEnB5C,GAAOC,IACTgB,GAAO,QAAUjB,EAAM,QAAUC,GAG/B8C,IACF9B,GAAO,SAAW8B,GAhBxB,UAkByB7B,IAAMC,IAAIF,GAlBnC,eAkBU4B,EAlBV,yBAmBWA,EAAOtB,KAAKrC,QAnBvB,iCAqBS,IArBT,6C,0BC5FM8D,E,kDACJ,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAIRkF,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,MACZC,WAAY,UANd,EAAKD,MAAQ,KAFI,E,qDAajB,OACE,yBAAKlF,UAAU,SACb,uBAAGoF,MAAOtF,KAAKmF,YAAanF,KAAKC,MAAMsF,W,GAhB3BrE,aAsBdsE,E,kDACJ,WAAYvF,GAAQ,IAAD,8BACjB,cAAMA,IACDmF,MAAQ,OAFI,E,UADGF,GAOlBO,E,kDACJ,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IAIRkF,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,MACZM,UAAW,WANb,EAAKN,MAAQ,MAFI,E,UADIF,GC8BVS,E,4MAvDbjG,MAAQ,CACNgF,MAAO,GACPkB,YAAa,I,EAGfC,mBAAqB,SAAC9F,GACpB,IAAM+F,EAAQ/F,EAAMgG,OAAOD,MAC3B,EAAKjG,SAAS,CAAE6E,MAAOoB,IACvBrB,EAAeqB,GAAOE,MAAK,SAAAJ,GACzB,EAAK/F,SAAS,CAAE+F,gBAEZE,GAAgC,IAAvBF,EAAYK,OACvB,EAAKpG,SAAS,CACZqG,SAAU,yEAGZ,EAAKrG,SAAS,CACZqG,SAAU,S,EAMlBC,kBAAoB,SAACL,EAAO5D,EAAKC,GAC/B,EAAKtC,SAAS,CAAE6E,MAAOoB,EAAOF,YAAa,KAC3C,EAAK3F,MAAMmG,aAAalE,EAAKC,I,uDAGrB,IAAD,OACP,OACE,yBAAKjC,UAAU,cACb,kBAAC,EAAD,CAAWqF,KAAMvF,KAAKN,MAAMwG,WAC5B,2BAAOhG,UAAU,gBAAjB,eACA,2BACE+C,KAAK,OACL/C,UAAU,OACV4F,MAAO9F,KAAKN,MAAMgF,MAClB2B,SAAUrG,KAAK6F,mBACfS,YAAY,gBAGd,wBAAIpG,UAAU,eACXF,KAAKN,MAAMkG,YAAYvE,KAAI,SAAAkF,GAAI,OAC9B,wBACEjF,IAAKiF,EAAK3B,YACV3D,QAAS,kBAAM,EAAKkF,kBAAkBI,EAAK3B,YAAa2B,EAAKrE,IAAKqE,EAAKpE,OACvEoE,EAAK3B,sB,GAhDM1D,aCkCVsF,E,4MAjCb9G,MAAQ,CACN+G,OAAQ,I,EAGVC,eAAiB,SAAC3G,GAChB,IAAM+F,EAAQ/F,EAAMgG,OAAOD,MAC3B,EAAKjG,SAAS,CAAE4G,OAAQX,IACxB,EAAK7F,MAAMmG,aAAa,KAAM,KAAMN,GAEhCA,EAAQ,EACV,EAAKjG,SAAS,CAAE8G,UAAW,8BAE3B,EAAK9G,SAAS,CAAE8G,UAAW,M,uDAK7B,OACE,yBAAKzG,UAAU,kBACb,kBAAC,EAAD,CAAYqF,KAAMvF,KAAKN,MAAMiH,YAC7B,2BAAOzG,UAAU,gBAAjB,SACA,2BACE+C,KAAK,SACL/C,UAAU,mBACV4F,MAAO9F,KAAKN,MAAM+G,OAClBJ,SAAUrG,KAAK0G,iBAEjB,2BAAOxG,UAAU,gBAAjB,gB,GA7BqBgB,aC4Cd0F,E,4MAtCblH,MAAQ,CACN0B,OAAQ,GACRc,IAAK,KACLC,IAAK,KACL8C,KAAM,M,EAORmB,aAAe,SAAClE,EAAKC,EAAK8C,GACpB/C,GAAOC,EACT6C,EAAU9C,EAAKC,EAAK,EAAKzC,MAAMuF,MAAMe,MAAK,SAAA5E,GAAM,OAC9C,EAAKvB,SAAS,CAAEuB,SAAQc,MAAKC,WAEtB8C,EACTD,EAAU,EAAKtF,MAAMwC,IAAK,EAAKxC,MAAMyC,IAAK8C,GAAMe,MAAK,SAAA5E,GAAM,OACzD,EAAKvB,SAAS,CAAEuB,SAAQ6D,YAG1BD,EAAU,EAAKtF,MAAMwC,IAAK,EAAKxC,MAAMyC,IAAK,EAAKzC,MAAMuF,MAAMe,MAAK,SAAA5E,GAAM,OACpE,EAAKvB,SAAS,CAAEuB,e,kEAdpBpB,KAAKoG,iB,+BAoBL,OACE,yBAAKlG,UAAU,OACb,kBAAC,EAAD,CAAYkG,aAAcpG,KAAKoG,eAC/B,kBAAC,EAAD,CAAgBA,aAAcpG,KAAKoG,eACnC,kBAAC,EAAD,CAAWhF,OAAQpB,KAAKN,MAAM0B,c,GAlCpBF,aCKE2F,QACW,cAA7B1C,OAAOC,SAAS0C,UAEe,UAA7B3C,OAAOC,SAAS0C,UAEhB3C,OAAOC,SAAS0C,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,YCtH5BC,SAAc,oCAAoCC,Y","file":"static/js/main.22e6e692.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n\n  state = {\n    expanded: false,\n  }\n\n  handleShowDetails = () => {\n    this.setState(prevState => ({\n      expanded: !prevState.expanded\n    }));\n  }\n\n  render() {\n    const event = this.props.event;\n\n    return (\n      <div className=\"Event\">\n        <p className=\"time\">{event.local_time} - {event.local_date}</p>\n        <p className=\"name\">{event.name}</p>\n        <p className=\"going\">{event.yes_rsvp_count} people are attending</p>\n        {this.state.expanded &&\n          <div className=\"extra\">\n            {event.venue && event.venue.name &&\n              <p className='address'>\n                {event.venue.name\n                  + ', ' + event.venue.address_1\n                  + ', ' + event.venue.city\n                  + ', ' + event.venue.localized_country_name\n                }\n              </p>\n            }\n            <div className=\"description\" dangerouslySetInnerHTML={{ __html: event.description }} />\n            <p className=\"visibility\">{event.visibility}</p>\n            <a className=\"link\" href={event.link}>Event Link</a>\n          </div>\n        }\n        <button className=\"details-btn\" onClick={this.handleShowDetails}>Details</button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockEvents = {\n\n  city: {\n    id: 1007700,\n    city: 'MÃ¼nchen',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257\n  },\n  events: [\n    {\n      created: 1591614589000,\n      duration: 7200000,\n      id: '271160041',\n      name: 'Saturday morning squash in Parkclub Nymphenburg',\n      rsvp_limit: 3,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1592036100000,\n      local_date: '2020-06-13',\n      local_time: '10:15',\n      updated: 1591614589000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      venue: {\n        id: 25978898,\n        name: 'Park Club Nymphenburg',\n        lat: 48.1603889465332,\n        lon: 11.513166427612305,\n        repinned: false,\n        address_1: 'StievestraÃe 15, 80638',\n        city: 'MÃ¼nchen',\n        country: 'DE',\n        localized_country_name: 'Germany'\n      },\n      is_online_event: false,\n      group: {\n        created: 1539632284000,\n        name: 'Casual Squash Games',\n        id: 30324826,\n        join_mode: 'approval',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Casual-Squash-Games',\n        who: 'Members',\n        localized_location: 'MÃ¼nchen, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Casual-Squash-Games/events/271160041/',\n      description: '<p>All levels are welcome!</p> <p>We meet at the entrance of Parkclub Nymphenburg at 10:00.<br/>There is 1 court (2-3 people) booked from 10:15 till 11:45<br/>If there are no slots left, use waitlist, we can try to book another court</p> <p>Important: Cancellation is free for 48 hours in advance. So if you RSVP and cannot come, please let me know, so I can cancel the court.<br/>Cancellations on short notice should be paid, to cover court costs.</p> ',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1562750055000,\n      duration: 10800000,\n      id: 'tkqsdrybckblb',\n      name: 'Designer-Stammtisch',\n      rsvp_limit: 35,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1594227600000,\n      local_date: '2020-07-08',\n      local_time: '19:00',\n      updated: 1562750055000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 1,\n      venue: {\n        id: 26506448,\n        name: 'Cafe Zeitgeist',\n        lat: 48.15114212036133,\n        lon: 11.576687812805176,\n        repinned: false,\n        address_1: 'TÃ¼rkenstraÃe 74',\n        city: 'MÃ¼nchen',\n        country: 'de',\n        localized_country_name: 'Germany'\n      },\n      is_online_event: false,\n      group: {\n        created: 1444668795000,\n        name: 'MÃ¼nchner Designer-Stammtisch',\n        id: 19020346,\n        join_mode: 'approval',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Designer-Stammtisch',\n        who: 'Designer',\n        localized_location: 'MÃ¼nchen, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Designer-Stammtisch/events/tkqsdrybckblb/',\n      description: '<p>Liebe DesignerInnen,</p> <p>wir treffen uns jeden 2. Mittwoch im Monat um 19:00 Uhr in (neu:) Zeitgeist in der TÃ¼rkenstraÃe.</p> <p>Bringt eure Erfolge, neusten Projekte oder auch kleinen Problemchen mit und teilt sie mit anderen Designern bei einem entspannten Abendessen.</p> <p>Wir freuen uns auf neue Designer und alte Bekannte, und auf einen gemÃ¼tlichen Abend mit Designer-Kaltsch-und-Tratsch.</p> <p>Lieben GruÃ, Ben</p> <p>ps: fÃ¼r alle die gerne lÃ¤nger unterwegs sind finden wir auch diesmal bestimmt wieder eine Location.</p> <p>pps: We mostly chat in German, but English will work just find as well.</p> ',\n      how_to_find_us: 'Fragt nach dem Designerstammtisch dort! *** Please ask for the Designerstammtisch there!',\n      visibility: 'public',\n      member_pay_fee: false\n    }\n  ]\n};\n\nexport { mockEvents };\n","import { mockEvents } from './mock_events/mock-events';\nimport axios from 'axios';\n\n// API Auth Token Functions\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url = 'https://b8irz6xb5a.execute-api.us-east-2.amazonaws.com/dev/api/token/' + key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to renew token by refresh_token\n    url = 'https://b8irz6xb5a.execute-api.us-east-2.amazonaws.com/dev/api/refresh/' + key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nasync function getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  // If no access_token is found\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    // If no code is found the user needs to be redirected to get it\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize'\n        + '?client_id=10l1jtlp01s1lj83me59sso5kh'\n        + '&response_type=code'\n        + '&redirect_uri=https://cruebee.github.io/meetemup/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  // Check if access_token is still valid\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n  // Date.now() returns a timestamp in milleseconds, one hour = 3,600,000\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken;\n  }\n\n  // If access_token is expired, renew it using refresh_token\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n\n}\n\n// API Event Functions\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n      + query\n      + '&access_token=' + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  // Check for an access_token\n  const token = await getAccessToken();\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    // lat and lon is optional; if you have them you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    // page is also optional, if page is available, add it\n    if (page) {\n      url += '&page=' + page;\n    }\n    const result = await axios.get(url);\n    return result.data.events;\n  }\n  return [];\n}\n\nexport { getSuggestions, getEvents };\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      background: 'white',\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n    };\n  }\n}\n\nexport { InfoAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from '../api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText: 'We can\\'t find the city you are looking for. Please try another city.',\n        });\n      } else {\n        this.setState({\n          infoText: '',\n        });\n      }\n    });\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <label className=\"search-label\">City Search</label>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          placeholder=\"Change City\"\n        >\n        </input>\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item =>\n            <li\n              key={item.name_string}\n              onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}\n            >{item.name_string}\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    number: 32,\n  }\n\n  onNumberChange = (event) => {\n    const value = event.target.value;\n    this.setState({ number: value });\n    this.props.updateEvents(null, null, value);\n\n    if (value < 1) {\n      this.setState({ errorText: 'Number must be at least 1' });\n    } else {\n      this.setState({ errorText: '' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <ErrorAlert text={this.state.errorText} />\n        <label className=\"number-label\">Show </label>\n        <input\n          type=\"number\"\n          className=\"number-of-events\"\n          value={this.state.number}\n          onChange={this.onNumberChange}\n        />\n        <label className=\"number-label\"> Events</label>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { getEvents } from './api';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    lat: null,\n    lon: null,\n    page: null,\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events =>\n        this.setState({ events, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\n        this.setState({ events, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\n        this.setState({ events })\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\natatus.config('6f6ab4a42f514451b87fb7e484458d20').install();\n"],"sourceRoot":""}